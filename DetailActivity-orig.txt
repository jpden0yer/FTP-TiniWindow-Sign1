package com.example.android.sunshine;

import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.AsyncTask;
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
//import android.widget.TextView;
import android.util.Log;
import android.view.View;
import android.widget.EditText;
import org.apache.commons.net.ftp.FTP;
import org.apache.commons.net.ftp.FTPClient;
import android.widget.Toast;

import com.example.android.sunshine.utilities.NetworkUtils;
import com.example.android.sunshine.utilities.OpenWeatherJsonUtils;

import java.io.IOException;
import java.io.OutputStream;
import java.net.URL;

import static com.example.android.sunshine.MainActivity.join;
import static com.example.android.sunshine.MainActivity.padLeft;
import static com.example.android.sunshine.MainActivity.padRight;

public class DetailActivity extends AppCompatActivity {

    SharedPreferences sharedpreferences;
    private static final String FORECAST_SHARE_HASHTAG = " #SunshineApp";

    private EditText mWeatherDisplay;
    private EditText mSpeed;

    private int mAdapterPosition ;
    public static final String mypreference = "mypref";
    public static final String LineLength = "linelenghtKey";

    private int lineCount;
    private int lineLength;
    private int speed;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        //String [] splitData;
        String mForecast;

        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_detail);



        // TODO (2) Display the weather forecast that was passed from MainActivity
        mWeatherDisplay = (EditText) findViewById(R.id.tv_display_weather);
        mSpeed = (EditText) findViewById(R.id.et_speed);

        Intent intentThatStartedThisActivity = getIntent();



        sharedpreferences = getSharedPreferences(mypreference,
                Context.MODE_PRIVATE);


        if(intentThatStartedThisActivity != null) {
            if (intentThatStartedThisActivity.hasExtra(Intent.EXTRA_TEXT)) {
                mForecast = intentThatStartedThisActivity.getStringExtra(Intent.EXTRA_TEXT);
                mWeatherDisplay.setText(mForecast);
            }
            if (intentThatStartedThisActivity.hasExtra("adapterPosition")) {
                mAdapterPosition = intentThatStartedThisActivity.getIntExtra    ("adapterPosition", 20);
            }

            if (sharedpreferences.contains(LineLength)) {
                lineLength = sharedpreferences.getInt(LineLength, -1);
            }
            else {
                lineLength = 20;

            }
            if (sharedpreferences.contains("speed" + mAdapterPosition + "key"  )) {
                speed = sharedpreferences.getInt("speed" + mAdapterPosition + "key" , 16);
            }
            else {
                speed = 16;

            }

            mSpeed.setText( Integer.toString(speed) ) ;
            formatText();
            /*
            splitData = mForecast.split("\n") ;
            for (int j = 0; j < splitData.length; j ++ ){
                if (splitData [j].length() > lineLength)  {
                    splitData [j] = splitData [j].substring(0, lineLength);
                }
                else if (splitData [j].length() > lineLength) {
                    splitData [j] = padRight (splitData[j], " ", lineLength);
                }

            }
            mForecast = String.join( "\n", splitData) ;
            mWeatherDisplay.setText(mForecast);*/
        }


    }



    void formatText(){
        String mForecast = mWeatherDisplay.getText().toString()  ;
        String [] splitData;
        splitData = mForecast.split("\n") ;
        lineCount = splitData.length;
        for (int j = 0; j < splitData.length; j ++ ){
            if (splitData [j].length() > lineLength)  {
                splitData [j] = splitData [j].substring(0, lineLength);
            }
            else if (splitData [j].length() > lineLength) {
                splitData [j] = padRight (splitData[j], " ", lineLength);
            }

        }
        mForecast = join( "\n", splitData) ;
        mForecast = mForecast.toUpperCase();
        mWeatherDisplay.setText(mForecast);
    };

    private String generateFileContents(){
        speed =  Integer.parseInt(mSpeed.getText().toString()) ;
        formatText();
        String retval = mWeatherDisplay.getText().toString().replace("\n", "\r\n") +
                "\r\n[trick coding version 2.2]\r\n" +
                "020105010001FF050100" +
                padLeft(Integer.toHexString(lineCount), "0", 2 ) +
                padLeft(Integer.toHexString(speed * 10), "0", 2 ) ;


        retval = retval.toUpperCase();

        return retval;

    };

    public void Send(View view) {

        String server = "107.180.55.10";
        int port = 21;
        String user = "Sign1@tiniliteworld.com";
        String pass = "Sign1";

        String [] params = {            //params
                server,                 //0
                "" + port,              //1
                user,                   //2
                pass,                   //3
                "dat/Sign1.data",        //4
                generateFileContents()  //5

        };
        new SendDataTask().execute(params);

    }
    public void Save(View view) {

        //int speed;
        speed =  Integer.parseInt(mSpeed.getText().toString()) ;
        sharedpreferences = getSharedPreferences(mypreference,
                Context.MODE_PRIVATE);


        SharedPreferences.Editor editor = sharedpreferences.edit();
        editor.putString("line" + mAdapterPosition + "key", mWeatherDisplay.getText().toString());
        editor.putInt("speed" + mAdapterPosition + "key", speed);
        editor.commit();
        finish();

    }




    public class SendDataTask extends AsyncTask<String, Void, String[]> {

        @Override
        protected void onPreExecute() {
        }

        @Override
        protected String[] doInBackground(String... params) {

            Log.e("FTP-jp0", "begin doInBackground");


            String server = params[0];
            int port =   Integer.parseInt(params[1]);
            String user = params[2];
            String pass = params[3];
            String fileName = params[4];
            String fileContents = params[5];


            FTPClient ftpClient = new FTPClient();


            try {

                ftpClient.connect(server, port);

                ftpClient.login(user, pass);


                ftpClient.enterLocalPassiveMode();

                ftpClient.setFileType(FTP.BINARY_FILE_TYPE);

                OutputStream outputStream = ftpClient.storeFileStream(fileName);

                byte[] bytesIn = fileContents.getBytes() ;

                outputStream.write(bytesIn, 0, fileContents.length());

                outputStream.close();

                boolean completed = ftpClient.completePendingCommand();


                Log.e("FTP-jp0", fileContents);
                //"end doInBackground " + completed  );
            } catch (IOException ex) {



                Log.e("FTP-jp0","catch block after location " );
                System.out.println("Error: " + ex.getMessage());
                ex.printStackTrace();


            }



            return null;

        }

        @Override
        protected void onPostExecute(String[] weatherData) {
        }
    }




}